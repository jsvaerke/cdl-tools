From bec04194c2794ad4bc361fefbace9eba9de58961 Mon Sep 17 00:00:00 2001
From: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date: Mon, 18 Apr 2022 12:39:29 +0900
Subject: [PATCH 28/34] ata: libata: Set read/write commands CDL index

For devices supporting the command duration limits feature, when a read
or write operation has the IOPRIO_CLASS_DL priority class and the
command duration limits feature is enabled, set the command duration
limit index field of the command to the priority level.

For unqueued read and write operations, the command duration limit index
is set as the lower 2 bits of the feature field. For queued NCQ
read/write commands, the index is set as the lower 2 bits of the
auxiliary field.

Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
---
 drivers/ata/libata-core.c | 11 ++++++++++-
 drivers/ata/libata-scsi.c |  3 ++-
 drivers/ata/libata.h      |  2 +-
 3 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/ata/libata-core.c b/drivers/ata/libata-core.c
index 8f4eb8cd6aea..b9621d8ee4e4 100644
--- a/drivers/ata/libata-core.c
+++ b/drivers/ata/libata-core.c
@@ -679,7 +679,7 @@ u64 ata_tf_read_block(const struct ata_taskfile *tf, struct ata_device *dev)
  */
 int ata_build_rw_tf(struct ata_taskfile *tf, struct ata_device *dev,
 		    u64 block, u32 n_block, unsigned int tf_flags,
-		    unsigned int tag, int class)
+		    unsigned int tag, int class, int level)
 {
 	tf->flags |= ATA_TFLAG_ISADDR | ATA_TFLAG_DEVICE;
 	tf->flags |= tf_flags;
@@ -715,6 +715,11 @@ int ata_build_rw_tf(struct ata_taskfile *tf, struct ata_device *dev,
 		if (dev->flags & ATA_DFLAG_NCQ_PRIO_ENABLE &&
 		    class == IOPRIO_CLASS_RT)
 			tf->hob_nsect |= ATA_PRIO_HIGH << ATA_SHIFT_PRIO;
+
+		if (dev->flags & ATA_DFLAG_CDL_ENABLE &&
+		    class == IOPRIO_CLASS_DL)
+			tf->auxiliary |= level & 0x03;
+
 	} else if (dev->flags & ATA_DFLAG_LBA) {
 		tf->flags |= ATA_TFLAG_LBA;
 
@@ -746,6 +751,10 @@ int ata_build_rw_tf(struct ata_taskfile *tf, struct ata_device *dev,
 		tf->lbam = (block >> 8) & 0xff;
 		tf->lbal = block & 0xff;
 
+		if (dev->flags & ATA_DFLAG_CDL_ENABLE &&
+		    class == IOPRIO_CLASS_DL)
+			tf->feature |= level & 0x03;
+
 		tf->device |= ATA_LBA;
 	} else {
 		/* CHS */
diff --git a/drivers/ata/libata-scsi.c b/drivers/ata/libata-scsi.c
index e9752c31a335..2ee3b7acf736 100644
--- a/drivers/ata/libata-scsi.c
+++ b/drivers/ata/libata-scsi.c
@@ -1539,6 +1539,7 @@ static unsigned int ata_scsi_rw_xlat(struct ata_queued_cmd *qc)
 	const u8 *cdb = scmd->cmnd;
 	struct request *rq = scmd->request;
 	int class = IOPRIO_PRIO_CLASS(req_get_ioprio(rq));
+	int level = IOPRIO_PRIO_DATA(req_get_ioprio(rq));
 	unsigned int tf_flags = 0;
 	u64 block;
 	u32 n_block;
@@ -1611,7 +1612,7 @@ static unsigned int ata_scsi_rw_xlat(struct ata_queued_cmd *qc)
 	qc->nbytes = n_block * scmd->device->sector_size;
 
 	rc = ata_build_rw_tf(&qc->tf, qc->dev, block, n_block, tf_flags,
-			     qc->hw_tag, class);
+			     qc->hw_tag, class, level);
 
 	if (likely(rc == 0))
 		return 0;
diff --git a/drivers/ata/libata.h b/drivers/ata/libata.h
index 68cdd81d747c..8d265def894e 100644
--- a/drivers/ata/libata.h
+++ b/drivers/ata/libata.h
@@ -47,7 +47,7 @@ extern u64 ata_tf_to_lba48(const struct ata_taskfile *tf);
 extern struct ata_queued_cmd *ata_qc_new_init(struct ata_device *dev, int tag);
 extern int ata_build_rw_tf(struct ata_taskfile *tf, struct ata_device *dev,
 			   u64 block, u32 n_block, unsigned int tf_flags,
-			   unsigned int tag, int class);
+			   unsigned int tag, int class, int level);
 extern u64 ata_tf_read_block(const struct ata_taskfile *tf,
 			     struct ata_device *dev);
 extern unsigned ata_exec_internal(struct ata_device *dev,
-- 
2.35.1

